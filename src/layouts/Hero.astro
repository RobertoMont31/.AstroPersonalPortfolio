---
import Avatar from "../components/Avatar.astro";
import HeroTitle from "../components/HeroTitle.astro";
import HeroSubtittle from "../components/HeroSubtittle.astro";
---

<div
	class="grid grid-cols-1 grid-rows-5 md:grid-cols-2 md:grid-rows-6 gap-5 w-full h-screen">
	<Avatar
		twContainerClasses="row-start-2 row-span-2 md:row-start-2 md:row-span-3 place-self-center place-content-center w-3/5 md:w-4/5 outline-double rounded-3xl outline-8 aspect-square outline-violet-100 transition-all duration-300"
	/>
	<div
		class="w-4/5 text-3xl row-span-1 row-start-4 md:row-start-2 md:row-span-3 place-self-center place-items-center text-center md:text-left">
		<HeroTitle
			twContainerClasses="font-chakra text-violet-100 font-thin md:text-5xl lg:text-6xl xl:text-7xl 2xl:text-9xl"
			twAccentClasses="font-extrabold text-orange-400 text-4xl md:text-6xl lg:text-7xl xl:text-8xl 2xl:text-[9rem]"
			text="Hi, I'm "
			accent="Roberto"
		/>
		<div class="w-full h-1 rounded-full bg-red-500 translate-y-4"></div>
		<HeroSubtittle
			twContainerClasses="inline-block w-full font-chakra tracking-wide whitespace-nowrap text-violet-100 mt-5 font-thin md:text-3xl lg:text-4xl xl:text-5xl 2xl:text-7xl"
			twAccentClasses="absolute"
			text={[
				"<FrontEnd />",
				"<Developer />",
				"<RPA Dev />",
				"<Jack-of-all-trades />",
				"<UI/UX Fanatic />",
				"<Full Stack />",
			]}
			id="reveal-text"
		/>
	</div>
</div>

<script>
	import SplitType from "split-type"; //Splits text into individual divs
	import { gsap } from "gsap"; //animations platform

	//Reveal text animation
	// Create array of subtitles
	const subtitles = gsap.utils.toArray("#stagger-container");
	//Create timeline for all subtitles this repeats infinitely
	const subtitleTl = gsap.timeline({ repeat: -1 });
	//loop subtitles
	subtitles.forEach((subtitle) => {
		//split subtitle into individual divs
		const splitSubTitle = new SplitType(subtitle);
		//Create timeline for all characters in the subtitle
		const charsTl = gsap.timeline({ repeat: 1, yoyo: true, repeatDelay: 0.5 });
		charsTl
			//animation for pulling letters up
			.from(
				splitSubTitle.chars,
				{
					opacity: 0,
					yPercent: 100,
					stagger: 0.1,
				},
				"<",
			)
			//animation for pulling letters down
			.to(
				splitSubTitle.chars,
				{
					opacity: 100,
					yPercent: 0,
					stagger: 0.1,
				},
				"<1",
			);
		//add another timeline for next subtitle.
		subtitleTl.add(charsTl);
	});

	//Tilt Avatar effect
	gsap.set("#tiltElement", {
		transformOrigin: "center center",
		ease: "power4.out",
	});

	const tiltElements = document.querySelectorAll('[id="tiltElement"]');

	tiltElements.forEach((element) => {
		element.addEventListener("mousemove", mouseMoved);
	});

	function mouseMoved(ev) {
		const setRotX = gsap.quickSetter("#tiltElement", "rotationX", "deg");
		const setRotY = gsap.quickSetter("#tiltElement", "rotationY", "deg");

		const target = ev.target;
		const rect = target.getBoundingClientRect();

		const deltaX = ev.clientX - rect.left;
		const deltaY = ev.clientY - rect.top;

		const xPct = deltaX / rect.width - 0.5;
		const yPct = deltaY / rect.height - 0.5;

		setRotX(-yPct * 50);
		setRotY(xPct * 50);
	}
</script>
